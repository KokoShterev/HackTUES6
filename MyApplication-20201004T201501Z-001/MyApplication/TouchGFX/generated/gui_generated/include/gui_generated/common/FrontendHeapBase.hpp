/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>



#include <touchgfx/transitions/SlideTransition.hpp>



#include <touchgfx/transitions/SlideTransition.hpp>


#include <touchgfx/transitions/SlideTransition.hpp>

#include <touchgfx/transitions/SlideTransition.hpp>

#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>

#include <touchgfx/transitions/SlideTransition.hpp>


#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>
#include <touchgfx/transitions/SlideTransition.hpp>

#include <touchgfx/transitions/SlideTransition.hpp>


#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/hallway_screen/hallwayView.hpp>
#include <gui/hallway_screen/hallwayPresenter.hpp>
#include <gui/lr_dark_screen/lr_darkView.hpp>
#include <gui/lr_dark_screen/lr_darkPresenter.hpp>
#include <gui/lr_light_screen/lr_LightView.hpp>
#include <gui/lr_light_screen/lr_LightPresenter.hpp>
#include <gui/bedroom_off_screen/bedroom_offView.hpp>
#include <gui/bedroom_off_screen/bedroom_offPresenter.hpp>
#include <gui/bedroom_on_screen/bedroom_onView.hpp>
#include <gui/bedroom_on_screen/bedroom_onPresenter.hpp>
#include <gui/bathroom_screen/bathroomView.hpp>
#include <gui/bathroom_screen/bathroomPresenter.hpp>
#include <gui/menu_screen/menuView.hpp>
#include <gui/menu_screen/menuPresenter.hpp>
#include <gui/washingm_screen/washingMView.hpp>
#include <gui/washingm_screen/washingMPresenter.hpp>
#include <gui/heavy_smart_screen/heavy_smartView.hpp>
#include <gui/heavy_smart_screen/heavy_smartPresenter.hpp>
#include <gui/normal_eco_screen/normal_ecoView.hpp>
#include <gui/normal_eco_screen/normal_ecoPresenter.hpp>
#include <gui/bathtub_off_screen/BathTub_offView.hpp>
#include <gui/bathtub_off_screen/BathTub_offPresenter.hpp>
#include <gui/bathtub_on_screen/BathTub_onView.hpp>
#include <gui/bathtub_on_screen/BathTub_onPresenter.hpp>
#include <gui/kitchen_screen/KitchenView.hpp>
#include <gui/kitchen_screen/KitchenPresenter.hpp>
#include <gui/menu_kitchen_screen/menu_kitchenView.hpp>
#include <gui/menu_kitchen_screen/menu_kitchenPresenter.hpp>
#include <gui/extractor_screen/extractorView.hpp>
#include <gui/extractor_screen/extractorPresenter.hpp>
#include <gui/ovenoff_screen/ovenOffView.hpp>
#include <gui/ovenoff_screen/ovenOffPresenter.hpp>
#include <gui/ovenon_screen/ovenOnView.hpp>
#include <gui/ovenon_screen/ovenOnPresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< hallwayView,
            touchgfx::meta::TypeList< lr_darkView,
            touchgfx::meta::TypeList< lr_LightView,
            touchgfx::meta::TypeList< bedroom_offView,
            touchgfx::meta::TypeList< bedroom_onView,
            touchgfx::meta::TypeList< bathroomView,
            touchgfx::meta::TypeList< menuView,
            touchgfx::meta::TypeList< washingMView,
            touchgfx::meta::TypeList< heavy_smartView,
            touchgfx::meta::TypeList< normal_ecoView,
            touchgfx::meta::TypeList< BathTub_offView,
            touchgfx::meta::TypeList< BathTub_onView,
            touchgfx::meta::TypeList< KitchenView,
            touchgfx::meta::TypeList< menu_kitchenView,
            touchgfx::meta::TypeList< extractorView,
            touchgfx::meta::TypeList< ovenOffView,
            touchgfx::meta::TypeList< ovenOnView,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< hallwayPresenter,
            touchgfx::meta::TypeList< lr_darkPresenter,
            touchgfx::meta::TypeList< lr_LightPresenter,
            touchgfx::meta::TypeList< bedroom_offPresenter,
            touchgfx::meta::TypeList< bedroom_onPresenter,
            touchgfx::meta::TypeList< bathroomPresenter,
            touchgfx::meta::TypeList< menuPresenter,
            touchgfx::meta::TypeList< washingMPresenter,
            touchgfx::meta::TypeList< heavy_smartPresenter,
            touchgfx::meta::TypeList< normal_ecoPresenter,
            touchgfx::meta::TypeList< BathTub_offPresenter,
            touchgfx::meta::TypeList< BathTub_onPresenter,
            touchgfx::meta::TypeList< KitchenPresenter,
            touchgfx::meta::TypeList< menu_kitchenPresenter,
            touchgfx::meta::TypeList< extractorPresenter,
            touchgfx::meta::TypeList< ovenOffPresenter,
            touchgfx::meta::TypeList< ovenOnPresenter,
            touchgfx::meta::Nil > > > > > > > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::TypeList< SlideTransition<SOUTH>,
            touchgfx::meta::TypeList< SlideTransition<NORTH>,
            touchgfx::meta::TypeList< SlideTransition<EAST>,
            touchgfx::meta::TypeList< SlideTransition<WEST>,
            touchgfx::meta::Nil > > > >
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotohallwayScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
