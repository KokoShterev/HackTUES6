/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MENUVIEWBASE_HPP
#define MENUVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/menu_screen/menuPresenter.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class menuViewBase : public touchgfx::View<menuPresenter>
{
public:
    menuViewBase();
    virtual ~menuViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::ScalableImage scalableImage1;
    touchgfx::Button back;
    touchgfx::ScalableImage wm;
    touchgfx::ScalableImage bt;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > wm_button;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > bt_button;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<menuViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<menuViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // MENUVIEWBASE_HPP
