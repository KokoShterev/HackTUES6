/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/lr_light_screen/lr_LightViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

lr_LightViewBase::lr_LightViewBase() :
    buttonCallback(this, &lr_LightViewBase::buttonCallbackHandler),
    anim1EndedCallback(this, &lr_LightViewBase::anim1EndedCallbackHandler)
{

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_MINIMALIST_LIVING_ROOM_ID));
    scalableImage1.setPosition(0, 0, 480, 272);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    light1.setBitmap(touchgfx::Bitmap(BITMAP_LIGHTS_ON_ID));
    light1.setPosition(22, -32, 192, 145);
    light1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    light1_1.setBitmap(touchgfx::Bitmap(BITMAP_LIGHTS_ON_ID));
    light1_1.setPosition(240, -32, 192, 145);
    light1_1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    light1_2.setBitmap(touchgfx::Bitmap(BITMAP_LIGHTS_ON_ID));
    light1_2.setPosition(132, -32, 192, 145);
    light1_2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    go_back.setXY(0, 0);
    go_back.setBitmaps(touchgfx::Bitmap(BITMAP_BACK_ID), touchgfx::Bitmap(BITMAP_BACK_ID));
    go_back.setAction(buttonCallback);

    lights.setXY(400, 0);
    lights.setBitmaps(touchgfx::Bitmap(BITMAP_LIGHT_BUTTON_ON_ID), touchgfx::Bitmap(BITMAP_LIGHT_BUTTON_ON_ID));
    lights.setAction(buttonCallback);

    bedroom.setXY(310, 106);
    bedroom.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    bedroom.setLabelText(touchgfx::TypedText(T_SINGLEUSEID5));
    bedroom.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    bedroom.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    bedroom.setAction(buttonCallback);

    add(scalableImage1);
    add(light1);
    add(light1_1);
    add(light1_2);
    add(go_back);
    add(lights);
    add(bedroom);
}

void lr_LightViewBase::setupScreen()
{

}

//Called when the screen is done with transition/load
void lr_LightViewBase::afterTransition()
{
    //anim1
    //When screen is entered move bedroom
    //Move bedroom to x:285, y:106 with LinearIn easing in 350 ms (21 Ticks)
    bedroom.clearMoveAnimationEndedAction();
    bedroom.startMoveAnimation(285, 106, 21, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
    bedroom.setMoveAnimationEndedAction(anim1EndedCallback);
}

void lr_LightViewBase::anim1EndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::ButtonWithLabel>& comp)
{
    //anim2
    //When anim1 completed move bedroom
    //Move bedroom to x:310, y:106 with LinearIn easing in 350 ms (21 Ticks)
    bedroom.clearMoveAnimationEndedAction();
    bedroom.startMoveAnimation(310, 106, 21, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
}

void lr_LightViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &go_back)
    {
        //back
        //When go_back clicked change screen to hallway
        //Go to hallway with no screen transition
        application().gotohallwayScreenNoTransition();
    }
    else if (&src == &lights)
    {
        //lights
        //When lights clicked change screen to lr_dark
        //Go to lr_dark with screen transition towards North
        application().gotolr_darkScreenSlideTransitionNorth();
    }
    else if (&src == &bedroom)
    {
        //bedroom
        //When bedroom clicked change screen to bedroom_off
        //Go to bedroom_off with no screen transition
        application().gotobedroom_offScreenNoTransition();
    }
}
