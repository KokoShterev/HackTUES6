/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/lr_dark_screen/lr_darkViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

lr_darkViewBase::lr_darkViewBase() :
    buttonCallback(this, &lr_darkViewBase::buttonCallbackHandler),
    animEndedCallback(this, &lr_darkViewBase::animEndedCallbackHandler)
{

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_LR_DARK_ID));
    scalableImage1.setPosition(0, 0, 480, 272);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    lights.setXY(400, 0);
    lights.setBitmaps(touchgfx::Bitmap(BITMAP_LIGHT_BUTTON_ON_ID), touchgfx::Bitmap(BITMAP_LIGHT_BUTTON_ON_ID));
    lights.setAction(buttonCallback);

    goback.setXY(0, 0);
    goback.setBitmaps(touchgfx::Bitmap(BITMAP_BACK_ID), touchgfx::Bitmap(BITMAP_BACK_ID));
    goback.setAction(buttonCallback);

    bedroom.setXY(310, 106);
    bedroom.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    bedroom.setLabelText(touchgfx::TypedText(T_SINGLEUSEID4));
    bedroom.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    bedroom.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    bedroom.setAction(buttonCallback);

    add(scalableImage1);
    add(lights);
    add(goback);
    add(bedroom);
}

void lr_darkViewBase::setupScreen()
{

}

//Called when the screen is done with transition/load
void lr_darkViewBase::afterTransition()
{
    //anim
    //When screen is entered move bedroom
    //Move bedroom to x:285, y:106 with LinearIn easing in 350 ms (21 Ticks)
    bedroom.clearMoveAnimationEndedAction();
    bedroom.startMoveAnimation(285, 106, 21, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
    bedroom.setMoveAnimationEndedAction(animEndedCallback);
}

void lr_darkViewBase::animEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::ButtonWithLabel>& comp)
{
    //anim1
    //When anim completed move bedroom
    //Move bedroom to x:310, y:106 with LinearIn easing in 350 ms (21 Ticks)
    bedroom.clearMoveAnimationEndedAction();
    bedroom.startMoveAnimation(310, 106, 21, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
}

void lr_darkViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &lights)
    {
        //lights_on
        //When lights clicked change screen to lr_Light
        //Go to lr_Light with screen transition towards South
        application().gotolr_LightScreenSlideTransitionSouth();
    }
    else if (&src == &goback)
    {
        //go_back
        //When goback clicked change screen to hallway
        //Go to hallway with no screen transition
        application().gotohallwayScreenNoTransition();
    }
    else if (&src == &bedroom)
    {
        //bedroom
        //When bedroom clicked change screen to bedroom_off
        //Go to bedroom_off with no screen transition
        application().gotobedroom_offScreenNoTransition();
    }
}
