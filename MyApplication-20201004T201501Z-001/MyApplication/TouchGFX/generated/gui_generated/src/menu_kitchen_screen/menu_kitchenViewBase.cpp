/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menu_kitchen_screen/menu_kitchenViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

menu_kitchenViewBase::menu_kitchenViewBase() :
    buttonCallback(this, &menu_kitchenViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &menu_kitchenViewBase::flexButtonCallbackHandler)
{

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_WHITE_ID));
    scalableImage1.setPosition(-399, -213, 1279, 698);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    back.setXY(0, 0);
    back.setBitmaps(touchgfx::Bitmap(BITMAP_BACK_ID), touchgfx::Bitmap(BITMAP_BACK_ID));
    back.setAction(buttonCallback);

    oven_button.setBoxWithBorderPosition(0, 0, 141, 126);
    oven_button.setBorderSize(5);
    oven_button.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    oven_button.setPosition(269, 85, 141, 126);
    oven_button.setAlpha(0);
    oven_button.setAction(flexButtonCallback);

    extractor_button.setBoxWithBorderPosition(0, 0, 134, 126);
    extractor_button.setBorderSize(5);
    extractor_button.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    extractor_button.setPosition(59, 85, 134, 126);
    extractor_button.setAlpha(0);
    extractor_button.setAction(flexButtonCallback);

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_OVEN_ID));
    scalableImage2.setPosition(269, 85, 141, 126);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    scalableImage3.setBitmap(touchgfx::Bitmap(BITMAP_PROPELLER_ID));
    scalableImage3.setPosition(59, 85, 134, 126);
    scalableImage3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    oven_name.setXY(313, 211);
    oven_name.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    oven_name.setLinespacing(0);
    oven_name.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));

    extr_name.setXY(80, 211);
    extr_name.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    extr_name.setLinespacing(0);
    extr_name.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));

    add(scalableImage1);
    add(back);
    add(oven_button);
    add(extractor_button);
    add(scalableImage2);
    add(scalableImage3);
    add(oven_name);
    add(extr_name);
}

void menu_kitchenViewBase::setupScreen()
{

}

void menu_kitchenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &back)
    {
        //back
        //When back clicked change screen to Kitchen
        //Go to Kitchen with screen transition towards North
        application().gotoKitchenScreenSlideTransitionNorth();
    }
}

void menu_kitchenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &oven_button)
    {
        //oven
        //When oven_button clicked change screen to ovenOff
        //Go to ovenOff with screen transition towards South
        application().gotoovenOffScreenSlideTransitionSouth();
    }
    else if (&src == &extractor_button)
    {
        //extraxtor
        //When extractor_button clicked change screen to extractor
        //Go to extractor with screen transition towards South
        application().gotoextractorScreenSlideTransitionSouth();
    }
}
