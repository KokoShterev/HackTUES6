/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/hallway_screen/hallwayViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

hallwayViewBase::hallwayViewBase() :
    buttonCallback(this, &hallwayViewBase::buttonCallbackHandler),
    moveBEndedCallback(this, &hallwayViewBase::moveBEndedCallbackHandler),
    moveKEndedCallback(this, &hallwayViewBase::moveKEndedCallbackHandler),
    moveLMEndedCallback(this, &hallwayViewBase::moveLMEndedCallbackHandler)
{

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_WINDOW_BG_ID));
    scalableImage1.setPosition(0, -75, 480, 260);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_SKY_BG_ID));
    scalableImage2.setPosition(0, 0, 480, 101);
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    scalableImage3.setBitmap(touchgfx::Bitmap(BITMAP_ST_HOUSEDEMO_UI_BG_ID));
    scalableImage3.setPosition(0, 0, 480, 272);
    scalableImage3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    livingroom.setXY(155, 212);
    livingroom.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    livingroom.setLabelText(touchgfx::TypedText(T_SINGLEUSEID1));
    livingroom.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    livingroom.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    livingroom.setAction(buttonCallback);

    kitchen.setXY(310, 106);
    kitchen.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    kitchen.setLabelText(touchgfx::TypedText(T_SINGLEUSEID2));
    kitchen.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    kitchen.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    kitchen.setAction(buttonCallback);

    bathroom.setXY(0, 106);
    bathroom.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    bathroom.setLabelText(touchgfx::TypedText(T_SINGLEUSEID3));
    bathroom.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    bathroom.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    bathroom.setAction(buttonCallback);

    add(scalableImage1);
    add(scalableImage2);
    add(scalableImage3);
    add(livingroom);
    add(kitchen);
    add(bathroom);
}

void hallwayViewBase::setupScreen()
{

}

//Called when the screen is done with transition/load
void hallwayViewBase::afterTransition()
{
    //moveB
    //When screen is entered move bathroom
    //Move bathroom to x:25, y:106 with LinearIn easing in 350 ms (21 Ticks)
    bathroom.clearMoveAnimationEndedAction();
    bathroom.startMoveAnimation(25, 106, 21, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
    bathroom.setMoveAnimationEndedAction(moveBEndedCallback);

    //moveK
    //When screen is entered move kitchen
    //Move kitchen to x:285, y:106 with LinearIn easing in 350 ms (21 Ticks)
    kitchen.clearMoveAnimationEndedAction();
    kitchen.startMoveAnimation(285, 106, 21, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
    kitchen.setMoveAnimationEndedAction(moveKEndedCallback);

    //moveLM
    //When screen is entered move livingroom
    //Move livingroom to x:155, y:187 with LinearIn easing in 350 ms (21 Ticks)
    livingroom.clearMoveAnimationEndedAction();
    livingroom.startMoveAnimation(155, 187, 21, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
    livingroom.setMoveAnimationEndedAction(moveLMEndedCallback);
}

void hallwayViewBase::moveBEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::ButtonWithLabel>& comp)
{
    //moveB1
    //When moveB completed move bathroom
    //Move bathroom to x:0, y:106 with LinearIn easing in 350 ms (21 Ticks)
    bathroom.clearMoveAnimationEndedAction();
    bathroom.startMoveAnimation(0, 106, 21, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
}

void hallwayViewBase::moveKEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::ButtonWithLabel>& comp)
{
    //moveK1
    //When moveK completed move kitchen
    //Move kitchen to x:310, y:106 with LinearIn easing in 348 ms (21 Ticks)
    kitchen.clearMoveAnimationEndedAction();
    kitchen.startMoveAnimation(310, 106, 21, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
}

void hallwayViewBase::moveLMEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::ButtonWithLabel>& comp)
{
    //moveLM1
    //When moveLM completed move livingroom
    //Move livingroom to x:155, y:212 with LinearIn easing in 350 ms (21 Ticks)
    livingroom.clearMoveAnimationEndedAction();
    livingroom.startMoveAnimation(155, 212, 21, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
}

void hallwayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &livingroom)
    {
        //lr
        //When livingroom clicked change screen to lr_dark
        //Go to lr_dark with no screen transition
        application().gotolr_darkScreenNoTransition();
    }
    else if (&src == &kitchen)
    {
        //kitchen
        //When kitchen clicked change screen to Kitchen
        //Go to Kitchen with no screen transition
        application().gotoKitchenScreenNoTransition();
    }
    else if (&src == &bathroom)
    {
        //bathr
        //When bathroom clicked change screen to bathroom
        //Go to bathroom with no screen transition
        application().gotobathroomScreenNoTransition();
    }
}
